name: BUild Wheels and Release
on:
  push:
    tags:
      - 'v*'
      - 'buildwheels'
env:
  CIBW_BUILD_VERBOSITY: 2
  CIBW_TEST_REQUIRES: "-r requirements/test.txt"
  CIBW_TEST_COMMAND: pytest --pyargs skimage


jobs:
  build_windows_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel
      - name: Build wheels for CPython 3.9 (Linux and Windows)
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp39-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_MANYLINUX_I686_IMAGE: manylinux1
          # CIBW_BEFORE_BUILD: pip install certifi numpy==1.19.3

      - name: Build Windows wheels for CPython
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp3?-*"
          CIBW_SKIP: "cp35-* cp36-* cp39-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_MANYLINUX_I686_IMAGE: manylinux1
          # CIBW_BEFORE_BUILD: pip install certifi numpy==1.16

      - name: Build wheels for CPython 3.6
        run: |
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp36-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_MANYLINUX_I686_IMAGE: manylinux1
          CIBW_BUILD_VERBOSITY: 2
          # CIBW_BEFORE_BUILD: pip install certifi numpy==1.16
        if: >
          startsWith(github.ref, 'refs/heads/v0.17') ||
          startsWith(github.ref, 'refs/tags/v0.17')
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./dist/*.whl


  deploy:
    name: Release
    needs: [build_windows_wheels]
    if: github.repository_owner == 'viniciusdc' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine
      
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: wheels
          path: ./dist
    
      - name: Publish the source distribution on PyPI
        run: |
          SK_VERSION=$(git describe --tags)
          python setup.py sdist
          ls -la ${{ github.workspace }}/dist 
          twine upload --repository testpypi ${{ github.workspace }}/dist/scikit-image-testviniver2-${SK_VERSION:1}.tar.gz
          cd ${{ github.workspace }}/dist
          twine upload --repository testpypi *.whl
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
              
      - name: Github release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}

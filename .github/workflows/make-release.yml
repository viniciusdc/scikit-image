name: Create Release
on:
  push:
    tags:
      - 'v*'
env:
  CIBW_BUILD_VERBOSITY: 2
  CIBW_TEST_REQUIRES: pytest pooch pytest-localserver pytest-faulthandler
  CIBW_TEST_COMMAND: pytest --pyargs skimage 


jobs:
  build_macos_wheels:
    name: Build wheels on ${{ matrix.os }}
    if: github.repository_owner == 'viniciusdc'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel

      - name: Build wheels for CPython 3.9 and Mac OS
        run: |
          brew install libomp
          python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp39-*"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_MANYLINUX_I686_IMAGE: manylinux1
          # CIBW_BEFORE_BUILD: pip install certifi numpy==1.19.3
          CC: /usr/bin/clang
          CXX: /usr/bin/clang++
          CPPFLAGS: "-Xpreprocessor -fopenmp"
          CFLAGS: "-Wno-implicit-function-declaration -I/usr/local/opt/libomp/include"
          CXXFLAGS: "-I/usr/local/opt/libomp/include"
          LDFLAGS: "-Wl,-rpath,/usr/local/opt/libomp/lib -L/usr/local/opt/libomp/lib -lomp"

  
  test_skimage_macos:
    needs: [build_macos_wheels]
    name: Test wheels on macos-cp${{ matrix.python-version }}
    runs-on: macos-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.7]
        OPTIONAL_DEPS: [1]
        include:
          - python-version: 3.7
            OPTIONAL_DEPS: 0
          - python-version: 3.9
            OPTIONAL_DEPS: 0
        exclude:
          - python-version: 3.7
            OPTIONAL_DEPS: 1
          - python-version: 3.9
            OPTIONAL_DEPS: 1

    steps:
      - name: Checkout scikit-image
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: wheels
          path: ./dist
      
      - name:  Install Dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install -r requirements/build.txt
          python -m pip install -r requirements/default.txt
          
          echo 'Show instaled dependencies'
          python -m pip list
      
      - name: Install Wheel
        if: success()
        run: |
          SK_VERSION=$(git describe --tags)
          PY_VER=${ matrix.python-version }
          WHEEL_NAME=cp${PY_VER//.}-cp${PY_VER//.}m-macosx_10_9_x86_64
          echo Instaling $WHEEL_NAME
          pip install -vv dist/scikit_image_vinitestver-${SK_VERSION:1}-${WHEEL_NAME}.whl
      
      - name: Run Tests
        if: success()
        run: |
          pip install -r requirements/test.txt
          if [[ "${OPTIONAL_DEPS}" == "1" ]]; then
                pip install -r ./requirements/optional.txt
                pip install -r ./requirements/extras.txt
            fi
          for f in doc/examples/*/*.py; do
            python "${f}"
            if [ $? -ne 0 ]; then
              exit 1
            fi
          done
      
    
  deploy:
    name: Release
    needs: [test_skimage_macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine
          pip install beautifulsoup4
          pip install 'numpy>=1.16.5,!=1.18.0'
      
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: wheels
          path: ./dist
    
      - name: Publish the source distribution on PyPI
        if: success()
        run: |
          SK_VERSION=$(git describe --tags)
          python setup.py sdist
          ls -la ${{ github.workspace }}/dist 
          twine upload --repository testpypi ${{ github.workspace }}/dist/scikit-image-vinitestver-${SK_VERSION:1}.tar.gz
          cd ${{ github.workspace }}/dist
          twine upload --repository testpypi *.whl
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
              
      - name: Github release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
